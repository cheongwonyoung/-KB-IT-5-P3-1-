{"ast":null,"code":"// src/axios.js\nimport axios from \"axios\";\n\n// Spring 서버의 기본 URL 설정 (예: localhost:8080)\nconst apiClient = axios.create({\n  baseURL: \"http://localhost:8080\",\n  // 스프링 서버 URL로 설정\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\napiClient.interceptors.request.use(config => {\n  // localStorage에서 JWT 토큰 가져오기\n  const token = localStorage.getItem(\"JwtToken\");\n  if (token) {\n    // 토큰이 있으면 Authorization 헤더에 추가\n    config.headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  // 요청 오류 처리\n  return Promise.reject(error);\n});\nexport default apiClient;","map":{"version":3,"names":["axios","apiClient","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject"],"sources":["/Users/gimeus/Desktop/Crunch-It/Crunch-It/Development/FE/muno-muno/src/axios.js"],"sourcesContent":["// src/axios.js\nimport axios from \"axios\";\n\n// Spring 서버의 기본 URL 설정 (예: localhost:8080)\nconst apiClient = axios.create({\n    baseURL: \"http://localhost:8080\", // 스프링 서버 URL로 설정\n    headers: {\n        \"Content-Type\": \"application/json\",\n    },\n});\napiClient.interceptors.request.use(\n    (config) => {\n        // localStorage에서 JWT 토큰 가져오기\n        const token = localStorage.getItem(\"JwtToken\");\n\n        if (token) {\n            // 토큰이 있으면 Authorization 헤더에 추가\n            config.headers[\"Authorization\"] = `Bearer ${token}`;\n        }\n\n        return config;\n    },\n    (error) => {\n        // 요청 오류 처리\n        return Promise.reject(error);\n    }\n);\n\nexport default apiClient;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC3BC,OAAO,EAAE,uBAAuB;EAAE;EAClCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AACFH,SAAS,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC7BC,MAAM,IAAK;EACR;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EAE9C,IAAIF,KAAK,EAAE;IACP;IACAD,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUK,KAAK,EAAE;EACvD;EAEA,OAAOD,MAAM;AACjB,CAAC,EACAI,KAAK,IAAK;EACP;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAeX,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}